{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/city-search/city-search.component.css","webpack:///./src/app/city-search/city-search.component.html","webpack:///./src/app/city-search/city-search.component.ts","webpack:///./src/app/current-weather/current-weather.component.css","webpack:///./src/app/current-weather/current-weather.component.html","webpack:///./src/app/current-weather/current-weather.component.ts","webpack:///./src/app/weather/weather.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"* {\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\n    \\n}\\n\\n \\n\\nh1 {\\n    color: white;\\n    padding: 70px;\\n}\\n\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n\\n\\n\\n<div style=\\\"text-align:center\\\">\\n<app-city-search (searchEvent)=\\\"doSearch($event)\\\"></app-city-search>\\n<h1>{{ title }}</h1>\\n<app-current-weather [current]=\\\"currentWeather\\\"></app-current-weather>\\n\\n\\n  \"","\nimport { ICurrentWeather } from './icurrent-weather';\nimport { WeatherService } from './weather/weather.service';\nimport { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  currentWeather: ICurrentWeather\n  title = 'Today\\'s Forecast';\n\n  constructor(private weatherService: WeatherService) {}\n\n  doSearch(searchValue){\n    const userInput = searchValue.split(',').map(s => s.trim ());\n  console.log(this.weatherService)\n  this.weatherService\n  .getCurrentWeather(userInput[0], userInput.length > 1 ? userInput[1] : undefined)\n.subscribe(data => this.currentWeather = data)  \n}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component';\nimport {WeatherService} from './weather/weather.service';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {RouterModule} from '@angular/router'\nimport {MatToolbarModule, MatCardModule, MatButtonModule} from '@angular/material';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CitySearchComponent } from './city-search/city-search.component';\nimport {MatFormFieldModule, MatInputModule} from '@angular/material';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrentWeatherComponent,\n    CitySearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    MatToolbarModule,\n    MatCardModule,\n    AngularFontAwesomeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule\n\n  ],\n  providers: [WeatherService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".fa-search {\\npadding: 15px;\\n}\"","module.exports = \"\\n\\n\\n  <mat-toolbar>\\n      <div class=\\\"search-bar\\\">Today's Forecast</div>\\n          <div class=\\\"form-component input--medium input--search\\\">\\n              <i class=\\\"fas fa-search\\\"></i>\\n\\n            <mat-form-field>\\n\\n              <input matInput placeholder=\\\"Enter city or zip\\\" aria-label=\\\"City or Zip\\\" [formControl]=\\\"search\\\">\\n              <!-- <input type=\\\"text\\\" placeholder=\\\"Search\\\" />  -->\\n            \\n              <mat-error *ngIf=\\\"search.invalid\\\">\\n                {{getErrorMessage()}}\\n              </mat-error>\\n            \\n            </mat-form-field>\\n            </div>\\n     \\n    </mat-toolbar>\"","import { Component, OnInit , Output, EventEmitter} from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport {debounceTime} from 'rxjs/operators';\nimport { getMatFormFieldMissingControlError } from '@angular/material';\n\n@Component({\n  selector: 'app-city-search',\n  templateUrl: './city-search.component.html',\n  styleUrls: ['./city-search.component.css']\n})\nexport class CitySearchComponent implements OnInit {\n  search = new FormControl('', [Validators.minLength(3)])\n\n  @Output() searchEvent = new EventEmitter<string>();\n\n  constructor() { }\n\n\n\n  ngOnInit() {\n    this.search.valueChanges\n    .pipe(debounceTime(1000))\n    .subscribe (\n      (searchValue: string) => {\n        if (!this.search.invalid) {\n          this.searchEvent.emit(searchValue)\n        }\n        \n      }\n    )\n  }\n\n  getErrorMessage(){\n    return this.search.hasError('minlength') ? 'Type more than 3 characters to search.': '';\n  }\n\n\n}\n\n\n","module.exports = \"/*\\n====================\\nWeather Card Styling\\n====================\\n*/\\n\\n/* When the input field gets focus, change its width to 100% */\\n\\n.city-country {\\n  font-size: 25px;\\n  color: white;\\n  padding: 15px;\\n}\\n\\n.date, .temperature, .weather-status {\\nfont-size: 20px;\\ncolor: white;\\npadding:-20px;\\n}\\n\\n/* .weather__card-dark {\\n    background: linear-gradient(to bottom, #711B86, #00057A);\\n    color: white;\\n  }\\n\\n  .weather__card > *{\\n    align-self: center;\\n} */\"","module.exports = \"\\n\\n    <!-- <section class=\\\"weather__card\\\" (click)=\\\"openDetails()\\\" [ngClass]=\\\"{'weather__card-dark': darkMode}\\\"> -->\\n  \\n     \\n    <div *ngIf=\\\"current\\\" class=\\\"city-country\\\">{{current?.city}}, {{current?.country}}</div>\\n    <div class=\\\"date\\\">{{current.date | date: 'fullDate'}}</div>\\n  <div img-icon>\\n    <img [src]='current.image' />\\n    <span class=\\\"temperature\\\">{{current?.temperature | number:'1.0-0'}}&#8457;</span>\\n  </div>\\n\\n  <div class=\\\"weather-status\\\">\\n    {{current?.description}}\\n  </div>\\n\\n<!-- </section> -->\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ICurrentWeather } from '../icurrent-weather';\n\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.css']\n})\nexport class CurrentWeatherComponent implements OnInit {\n  @Input() current: ICurrentWeather;\n\n  constructor() { \n    \n  }\n\n  ngOnInit() {\n    \n  }\n\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {ICurrentWeather} from '../icurrent-weather';\nimport {map} from 'rxjs/operators';\nimport { IWeatherService } from './iweather-service';\n\ninterface ICurrentWeatherData{\n  weather: [{\n    description: string,\n    icon: string,\n    \n  }],\n  main: {\n    temp: number\n  },\n  sys: {\n    country: string\n  },\n  dt: number,\n  name: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService implements IWeatherService{\n\n  constructor(private httpClient: HttpClient) { \n  }\n\n\n  getCurrentWeather(search: string | number, country?: string){\n    let uriParams =''\n\n    if (typeof search === 'string'){\n      uriParams = `q=${search}`\n    } else{\n      uriParams = `zip=${search}`\n    }\n\n    if(country) {\n      uriParams = `${uriParams},${country}`\n    }\n\n\n\n    return this.httpClient.get<ICurrentWeatherData>(\n      `${environment.baseUrl}api.openweathermap.org/data/2.5/weather?${uriParams}&appid=${environment.appId}`\n    ).pipe(\n      map(data => this.transformToICurrentWeather(data))\n    )\n  }\n\n\nprivate transformToICurrentWeather(data: ICurrentWeatherData): ICurrentWeather {\n  return {\n    city: data.name,\n    country:data.sys.country,\n    date: data.dt * 1000,\n    image: `http://openweathermap.org/img/w/${data.weather[0].icon}.png`,\n    temperature: this.convertKelvinToFahrenheit(data.main.temp),\n    description: data.weather[0].description\n  }\n}\n\nprivate convertKelvinToFahrenheit(kelvin: number): number{\n  return kelvin * 9/5 - 459.67;\n}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  appId: 'ff325907ac13f1601dabe6b6f59e80a7', // 'e0d96ab513fdd2b5997f40b86622ef81',\n  baseUrl: 'http://'\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}